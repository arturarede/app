buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.3.5.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
        classpath "io.freefair.gradle:lombok-plugin:5.3.0"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2"
        classpath "gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:2.18.2"
        classpath "com.epages:restdocs-api-spec-gradle-plugin:0.10.0"
    }
}

apply plugin: "java"
apply plugin: "jacoco"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "io.freefair.lombok"
apply plugin: "org.asciidoctor.convert"
apply plugin: "org.hidetake.swagger.generator"
apply plugin: "com.epages.restdocs-api-spec"

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.restdocs:spring-restdocs-restassured'
    implementation 'com.epages:restdocs-api-spec:0.9.6'
    implementation 'org.mapstruct:mapstruct:1.3.1.Final'

    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'com.epages:restdocs-api-spec-restassured:0.10.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
    swaggerUI 'org.webjars:swagger-ui:3.10.0'
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
}

ext {
    springRestDocsVersion = '2.0.5.RELEASE'
    snippetsDir = file('build/generated-snippets')
}

springBoot {
    buildInfo()
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
    resources {
        from('src/docs/resources')
        into './'
    }
    attributes 'revnumber' : version.toString(),
                'webfonts': false
}

openapi3 {
    server = "http://localhost:8080"
    title = "Siemens Api"
    description = "API description"
    version = project.version
    format = "yaml"
}

swaggerSources {
    siemens {
        inputFile = file('build/api-spec/openapi3.yaml')
    }
}

generateSwaggerUISiemens.dependsOn "openapi3"

bootJar {
    dependsOn 'generateSwaggerUI', 'asciidoctor'
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    from ("${openapi3.outputDirectory}/") {
        into 'static/docs/api'
    }
    from ("build/swagger-ui-siemens") {
        into 'static/docs/swagger-ui'
    }
    archiveName = "app.jar"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
        xml.destination file("${buildDir}/reports/jacoco.xml")
    }
}